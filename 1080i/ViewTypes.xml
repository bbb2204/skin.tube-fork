<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include file="ViewTypeList.xml"/>
    <include file="ViewTypeListExt.xml"/>
    <include file="ViewTypePoster.xml"/>
    <include file="ViewTypeFanart.xml"/>
    <include file="ViewTypeFanartSmall.xml"/>
    <include file="ViewTypeAlbumArt.xml"/>


    <!-- Details -->
    <variable name="ViewItemDetail">
        <value condition="Container.Content(Seasons)">$VAR[]</value>
        <value condition="!IsEmpty(ListItem.Episode) + Container.Content(Episodes) + ListItem.Property(IsSpecial)">$INFO[ListItem.Episode]</value>
        <value condition="!IsEmpty(ListItem.Season) + !IsEmpty(ListItem.Episode) + Container.Content(Episodes) + !IntegerGreaterThan(ListItem.Episode, 9)">$INFO[ListItem.Season]x0$INFO[ListItem.Episode]</value>
        <value condition="!IsEmpty(ListItem.Season) + !IsEmpty(ListItem.Episode)">$INFO[ListItem.Season]x$INFO[ListItem.Episode]</value>
        <value condition="!IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
    </variable>

    <!-- Subtitle Extended List -->
    <variable name="ViewItemDetailExt">
        <value condition="!IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
        <value condition="!IsEmpty(ListItem.ChannelName)">$INFO[ListItem.Title]</value>
    </variable>


    <variable name="ViewItemDetail2">
        <value condition="[Container.Content(TvShows) | Container.Content(Seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes), 0)">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
        <!--<value condition="Container.Content(TvShows) | Container.Content(Seasons)">[COLOR Disabled]$INFO[ListItem.Property(UnWatchedEpisodes)][/COLOR]</value>-->
        <value condition="Container.Content(Movies) | Container.Content(Episodes)">$INFO[ListItem.Rating]</value>
    </variable>

    <!-- Title -->
    <variable name="ViewItemTitle">
        <value condition="Container.Content(Seasons)">$VAR[]</value>
        <value condition="!IsEmpty(ListItem.OriginalTitle) + !IsEmpty(ListItem.Year) | !IsEmpty(ListItem.OriginalTitle) + !IsEmpty(ListItem.Episode)">$INFO[ListItem.OriginalTitle]</value>
        <value condition="!IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Year) | !IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Episode)">$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.Year) | !IsEmpty(ListItem.Episode)">$INFO[ListItem.Label]</value>
    </variable>

    <!-- Title Extended List -->
    <variable name="ViewItemTitleExt">
        <value condition="!IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Artist)">$INFO[ListItem.Title]</value>
        <value condition="!IsEmpty(ListItem.ChannelName)">$INFO[ListItem.ChannelName]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>
    <variable name="ViewItemTitleNoDetail">
        <value condition="Container.Content(Seasons) + StringCompare(ListItem.Title, $LOCALIZE[20366])">All seasons</value>
        <value condition="Container.Content(Seasons)">$INFO[ListItem.Title]</value>

        <!-- Force an empty label for items with a detail -->
        <value condition="!IsEmpty(ListItem.Year) | !IsEmpty(ListItem.Episode)">$VAR[]</value>

        <value condition="Container.Content(Albums) + !IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Artist) | Container.Content(Songs) + !IsEmpty(ListItem.Title) + !IsEmpty(ListItem.Artist) ">[COLOR Secondary]$INFO[ListItem.Artist] - [/COLOR]$INFO[ListItem.Title]</value>
        <value>$INFO[ListItem.Label]</value>
    </variable>

    <!-- Active overlay -->
    <include name="ActiveOverlay">
        <control type="group">
            <control type="image">
                <top>-10</top>
                <bottom>-10</bottom>
                <left>-10</left>
                <right>-10</right>

                <texture border="10">active-overlay.png</texture>
                
                <animation type="Focus" reversible="false">
                    <include>ActiveOverlayAnimation</include>
                </animation>

                <animation type="Visible" reversible="false">
                    <include>ActiveOverlayAnimation</include>
                </animation>

                <visible>!Window.IsActive(BusyDialog)</visible>
            </control>
            <control type="image">
                <top>-7</top>
                <bottom>-7</bottom>
                <left>-7</left>
                <right>-7</right>

                <texture border="10">active-overlay.png</texture>

                <animation type="Visible" reversible="true">
                    <effect type="Fade" start="0" end="100" time="150"/>
                </animation>

                <visible>Window.IsActive(BusyDialog)</visible>
            </control>
        </control>
    </include>

    <include name="ActiveOverlayAnimation">
        <effect type="Zoom" start="95" end="100" time="200" center="auto" tween="cubic"/>
        <effect type="Fade" start="0" end="100" time="150"/>
    </include>
    <include name="BusyOverlay">
        <!-- Busy image -->
        <!--control type="image">
            <right>0</right>
            <width>35</width>
            <texture>solid.png</texture>
            <colordiffuse>Primary</colordiffuse>

            <visible>Window.IsActive(BusyDialog)</visible>
            <!--animation condition="true" effect="rotate" center="auto" start="360" end="0" time="500" loop="true">Conditional</animation-->
            <!--animation effect="fade" start="100" end="40" pulse="true" time="300" condition="True">Conditional</animation>
        </control-->
        <!-- Busy Overlay -->
        <control type="group">
            <!--right>0</right-->
            <!--width>35</width-->
            <aligny>center</aligny>
            <visible>Window.IsActive(BusyDialog)</visible>
            <animation type="Visible" reversible="true">
                <!--effect type="Zoom" start="0" end="100" time="200" center="auto" tween="cubic"/-->
                <effect type="Fade" start="0" end="100" time="150" tween="cubic" easing="inout"/>
            </animation>

            <control type="image">
                <texture colordiffuse="BusyOverlay">solid.png</texture>
            </control>
            <!--control type="group">
                <right>0</right>
                <width>35</width>
                <control type="image">
                    <texture colordiffuse="BusyOverlay">solid.png</texture>
                </control>
                <control type="image">
                    <centertop>50%</centertop>
                    <centerleft>50%</centerleft>
                    <width>16</width>
                    <height>16</height>

                    <texture colordiffuse="BusySpinner">icon-stop.png</texture>
                    
                    <animation condition="true" effect="rotate" center="auto" start="360" end="0" time="500" loop="true">Conditional</animation>
                </control>
            </control-->
            <control type="image">
                <centertop>50%</centertop>
                <centerleft>50%</centerleft>
                <width>16</width>
                <height>16</height>

                <texture colordiffuse="BusySpinner">icon-record.png</texture>
                
                <animation condition="true" effect="Slide" start="-258,0" end="258,0" time="500" center="auto" tween="cubic" easing="inout" pulse="true">Conditional</animation>
            </control>
            <!--control type="image">
                <centertop>50%</centertop>
                <centerleft>50%</centerleft>
                <width>64</width>
                <height>64</height>

                <texture colordiffuse="BusySpinner">spinner.png</texture>
                <animation condition="true" effect="rotate" center="auto" start="360" end="0" time="500" loop="true">Conditional</animation>
            </control-->
        </control>
    </include>

    <include name="ImageOverlay">
        <control type="image">
            <top>-10</top>
            <bottom>-10</bottom>
            <left>-10</left>
            <right>-10</right>

            <texture border="15">image-overlay.png</texture>
        </control>
    </include>

    <include name="ItemBadge">
        <control type="group">
            <top>0</top>
            <right>0</right>
            <width>60</width>
            <height>60</height>

            <include>ItemBadgeVisibility</include>

            <control type="image">
                <left>-2</left>
                <bottom>-2</bottom>
                <include>FillParent</include>

                <texture colordiffuse="GlobalBackground">badge-corner.png</texture>
            </control>

            <control type="image">
                <include>FillParent</include>

                <texture>badge-corner.png</texture>
                <colordiffuse>BadgeBackground</colordiffuse>

                <visible>!ListItem.IsPlaying</visible>
            </control>
            <control type="image">
                <include>FillParent</include>

                <texture>badge-corner.png</texture>
                <colordiffuse>BadgePlayingBackground</colordiffuse>

                <visible>ListItem.IsPlaying</visible>
            </control>

            <control type="image">
                <top>10</top>
                <right>10</right>
                <width>16</width>
                <height>16</height>

                <texture colordiffuse="BadgeIcon">$VAR[ItemBadgeIcon]</texture>
            </control>
        </control>
    </include>

    <include name="ItemBadgeVisibility">
        <visible>ListItem.IsResumable | SubString(ListItem.Overlay, OverlayUnwatched) | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes), 0) | ListItem.IsPlaying</visible>
    </include>

    <variable name="ItemBadgeIcon">
        <value condition="ListItem.IsPlaying">icon-playing.png</value>
        <value condition="ListItem.IsResumable">icon-partwatched.png</value>
        <value condition="SubString(ListItem.Overlay, OverlayUnwatched) | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes), 0)">icon-unwatched.png</value>
    </variable>
    
    <include name="DefaultImage">
        <control type="image">
            <include>FillParent</include>
            <texture colordiffuse="BackgroundSecondary">solid.png</texture>
        </control>
    </include>

    <!-- Controls the visibility of the scrollbar, from Black's Experience1080 -->
    <include name="ViewScrollbarVisibility">
        <control type="group">
            <visible>!Skin.HasSetting(NoScrollBar)</visible>
            <control type="image" id="601">
                <animation effect="fade" start="100" end="0" time="0" delay="1500" condition="!Window.Previous(FullscreenVideo)">WindowOpen</animation>
            </control>
            <control type="image" id="602">
                <animation effect="fade" start="0" end="100" time="0">Visible</animation>
                <animation effect="fade" start="100" end="0" time="0">Hidden</animation>
                <visible>Control.HasFocus(70) | !Control.IsVisible(601)</visible>
            </control>
            <control type="image" id="602">
                <animation effect="fade" start="0" end="100" time="0">Visible</animation>
                <animation effect="fade" start="100" end="0" time="0" delay="1500">Hidden</animation>
                <visible>!Control.HasFocus(70) + [Container.Scrolling | Container.OnScrollNext | Container.OnScrollPrevious]</visible>
            </control>
        </control>
    </include>
    
    <include name="ViewTypeCommon">
        <pagecontrol>600</pagecontrol>

        <orientation>horizontal</orientation>
        <preloaditems>2</preloaditems>
    </include>

    <include name="ViewTypeHorizontal">
        <include>ViewTypeCommon</include>

        <onup condition="!Skin.HasSetting(KioskMode)">3000</onup>
        <onup condition="Skin.HasSetting(KioskMode) + Control.IsVisible(600)">600</onup>
        <ondown condition="Control.IsVisible(600)">600</ondown>
        <ondown condition="!Skin.HasSetting(KioskMode) + !Control.IsVisible(600)">3000</ondown>
    </include>

    <include name="ViewScrollbarHorizontal">
        <control type="scrollbar" id="600">
            <visible allowhiddenfocus="true">!Skin.HasSetting(NoScrollBar)</visible>
            
            <onfocus condition="Skin.HasSetting(NoScrollBar) + Skin.HasSetting(KioskMode)">Control.SetFocus(500)</onfocus>
            <onfocus condition="Skin.HasSetting(NoScrollBar) + !Skin.HasSetting(KioskMode)">Control.SetFocus(3000)</onfocus>

            <top>850</top>
            <width>1720</width>

            <onup>500</onup>
            <ondown condition="!Skin.HasSetting(KioskMode)">3000</ondown>
            <ondown condition="Skin.HasSetting(KioskMode)">500</ondown>

            <orientation>horizontal</orientation>
            <showonepage>false</showonepage>

            <animation effect="fade" start="100" end="0" time="200" tween="cubic" easing="out" condition="!Control.IsVisible(602) + !Control.HasFocus(600)">Conditional</animation>
        </control>
    </include>

    <include name="ViewOptions">
        <!-- View options -->
        <control type="group" id="3000">
            <visible>!Skin.HasSetting(KioskMode)</visible>

            <control type="image">
                <texture colordiffuse="DrawerBackground">solid.png</texture>
            </control>
            
            <bottom>-100</bottom>
            <height>100</height>

            <!-- Controls -->
            <control type="grouplist" id="3001">
                <top>11</top>
                <align>center</align>
                <orientation>horizontal</orientation>

                <itemgap>20</itemgap>
                <usecontrolcoords>true</usecontrolcoords>

                <!-- View mode -->
                <control type="group" id="3010">
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <control type="group">
                        <visible>ControlGroup(3010).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Label -->
                    <control type="group">
                        <right>200</right>

                        <control type="image">
                            <texture colordiffuse="BackgroundSecondary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemLabel</font>
                            <textcolor>Secondary</textcolor>

                            <label>View</label>
                        </control>
                    </control>

                    <!-- Value -->
                    <control type="group">
                        <right>0</right>
                        <width>200</width>

                        <control type="image">
                            <texture colordiffuse="BackgroundPrimary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemValue</font>
                            <textcolor>Primary</textcolor>

                            <label>$INFO[Container.ViewMode]</label>
                        </control>
                    </control>

                    <control type="button" id="2">

                        <onback>500</onback>
                        <onup>500</onup>

                        <ondown>500</ondown>

                        <onleft condition="Control.IsVisible(3050)">3050</onleft>
                        <onleft condition="!Control.IsVisible(3050)">3040</onleft>
                        <onright>3020</onright>

                        <onclick>Container.NextViewMode</onclick>
                    </control>
                </control>

                <!-- Sort method -->
                <control type="group" id="3020">
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <animation condition="!Control.IsEnabled(3)" effect="Fade" start="100" end="30" time="0">Conditional</animation>

                    <control type="group">
                        <visible>ControlGroup(3020).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Label -->
                    <control type="group">
                        <right>200</right>

                        <control type="image">
                            <texture colordiffuse="BackgroundSecondary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemLabel</font>
                            <textcolor>Secondary</textcolor>

                            <label>Sort</label>
                        </control>
                    </control>

                    <!-- Value -->
                    <control type="group">
                        <right>0</right>
                        <width>200</width>

                        <control type="image">
                            <texture colordiffuse="BackgroundPrimary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemValue</font>
                            <textcolor>Primary</textcolor>

                            <label>$INFO[Container.SortMethod]</label>
                        </control>
                    </control>

                    <control type="button" id="3">
                        <onback>500</onback>
                        <onup>500</onup>
                        <ondown>500</ondown>

                        <onleft>3010</onleft>
                        <onright>3030</onright>

                        <onclick>Container.NextSortMethod</onclick>
                    </control>
                </control>

                <!-- Sort direction -->
                <control type="group" id="3030">
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <control type="group">
                        <visible>ControlGroup(3030).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Label -->
                    <control type="group">
                        <right>60</right>

                        <control type="image">
                            <texture colordiffuse="BackgroundSecondary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemLabel</font>
                            <textcolor>Secondary</textcolor>

                            <label>Sort direction</label>
                        </control>
                    </control>

                    <!-- Value -->
                    <control type="group">
                        <right>0</right>
                        <width>60</width>

                        <control type="image">
                            <texture colordiffuse="BackgroundPrimary">solid.png</texture>
                        </control>

                        <control type="radiobutton" id="4">
                            <onback>500</onback>
                            <onup>500</onup>
                            <ondown>500</ondown>
                            <onleft>3020</onleft>
                            <onright>3040</onright>

                            <radioposx>20</radioposx>
                            <radioposy>0</radioposy>
                            <radiowidth>20</radiowidth>
                            <radioheight>20</radioheight>

                            <textureradioonnofocus flipy="true">sort-asc.png</textureradioonnofocus>
                            <textureradioonfocus flipy="true">sort-asc.png</textureradioonfocus>
                            <textureradiooffnofocus>sort-asc.png</textureradiooffnofocus>
                            <textureradioofffocus>sort-asc.png</textureradioofffocus>
                        </control>
                    </control>
                </control>

                <!-- Show watched -->
                <control type="group" id="3040">
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <control type="group">
                        <visible>ControlGroup(3040).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Label -->
                    <control type="group">
                        <right>60</right>

                        <control type="image">
                            <texture colordiffuse="BackgroundSecondary">solid.png</texture>
                        </control>

                        <control type="label">
                            <left>20</left>
                            <top>13</top>

                            <font>MenuItemLabel</font>
                            <textcolor>Secondary</textcolor>

                            <label>Show watched</label>
                        </control>
                    </control>

                    <!-- Value -->
                    <control type="group">
                        <right>0</right>
                        <width>60</width>

                        <control type="image">
                            <texture colordiffuse="BackgroundPrimary">solid.png</texture>
                        </control>

                        <control type="radiobutton" id="14">
                            <onback>500</onback>
                            <onup>500</onup>
                            <ondown>500</ondown>
                            <onleft>3030</onleft>
                            <onright condition="Control.IsVisible(3050)">3050</onright>
                            <onright condition="!Control.IsVisible(3050)">3010</onright>

                            <radioposx>20</radioposx>
                            <radioposy>0</radioposy>
                            <radiowidth>20</radiowidth>
                            <radioheight>20</radioheight>

                            <textureradioonnofocus>icon-unwatched.png</textureradioonnofocus>
                            <textureradioonfocus>icon-unwatched.png</textureradioonfocus>
                            <textureradiooffnofocus>icon-watched.png</textureradiooffnofocus>
                            <textureradioofffocus>icon-watched.png</textureradioofffocus>
                        </control>
                    </control>
                </control>

                <!-- Update music library -->
                <control type="group" id="3050">
                    <visible>Window.IsVisible(Music) | Window.IsVisible(MusicFiles) | Window.IsVisible(MusicLibrary) | Window.IsVisible(MusicPlaylist)</visible>
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <control type="group">
                        <visible>ControlGroup(3050).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Button -->
                    <control type="togglebutton" id="3051">
                        <onup>500</onup>
                        <ondown>500</ondown>
                        <onleft>3040</onleft>
                        <onright>3010</onright>

                        <align>center</align>
                        <textoffsety>13</textoffsety>

                        <font>MenuItemLabel</font>
                        <textcolor>Primary</textcolor>
                        <disabledcolor>Secondary</disabledcolor>

                        <label>Update library</label>
                        <altlabel>Updating...</altlabel>

                        <enable>!Library.IsScanningMusic</enable>
                        <usealttexture>Library.IsScanningMusic</usealttexture>

                        <onclick>UpdateLibrary(Music)</onclick>
                        <onclick>Control.SetFocus(3040)</onclick>

                        <texturenofocus colordiffuse="BackgroundPrimary">solid.png</texturenofocus>
                        <texturefocus colordiffuse="BackgroundPrimary">solid.png</texturefocus>
                        <alttexturenofocus colordiffuse="BackgroundSecondary">solid.png</alttexturenofocus>
                        <alttexturefocus colordiffuse="BackgroundSecondary">solid.png</alttexturefocus>
                    </control>
                </control>


                <!-- Update video library -->
                <control type="group" id="3050">
                    <visible>Window.IsVisible(Videos)</visible>
                    <top>10</top>
                    <width>340</width>
                    <height>60</height>

                    <control type="group">
                        <visible>ControlGroup(3050).HasFocus</visible>
                        
                        <animation type="Visible" reversible="false">
                            <include>ActiveOverlayAnimation</include>
                        </animation>

                        <include>ActiveOverlay</include>
                    </control>

                    <!-- Button -->
                    <control type="togglebutton" id="3051">
                        <onback>500</onback>
                        <onup>500</onup>
                        <ondown>500</ondown>
                        <onleft>3040</onleft>
                        <onright>3010</onright>

                        <align>center</align>
                        <textoffsety>13</textoffsety>

                        <font>MenuItemLabel</font>
                        <textcolor>Primary</textcolor>
                        <disabledcolor>Secondary</disabledcolor>

                        <label>Update library</label>
                        <altlabel>Updating...</altlabel>

                        <enable>!Library.IsScanningVideo</enable>
                        <usealttexture>Library.IsScanningVideo</usealttexture>

                        <onclick>UpdateLibrary(Video)</onclick>
                        <onclick>Control.SetFocus(3040)</onclick>

                        <texturenofocus colordiffuse="BackgroundPrimary">solid.png</texturenofocus>
                        <texturefocus colordiffuse="BackgroundPrimary">solid.png</texturefocus>
                        <alttexturenofocus colordiffuse="BackgroundSecondary">solid.png</alttexturenofocus>
                        <alttexturefocus colordiffuse="BackgroundSecondary">solid.png</alttexturefocus>
                    </control>
                </control>

            </control>
        </control>
    </include>

</includes>